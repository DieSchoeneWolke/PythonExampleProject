# https://tox.wiki/en/latest/config.html
[tox]
env_list =
    py312
    clean
    format
    lint
    test
    pre-commit
minversion = 4.12.1

[gh-actions]
python =
    3.12: py312

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux

[testenv]
description = Interpreter to be used
basepython = python3.12

[testenv:clean]
skip_install = true
deps =
    coverage==7.4.1
commands =
    python -m coverage erase

[testenv:format]
skip_install = true
deps =
    autoflake==2.2.1
    isort==5.13.2
    black==24.1.1
commands =
    python -m autoflake src tests
    python -m isort src tests
    black .

[testenv:lint]
skip_install = true
deps =
    flake8==7.0.0
    isort==5.13.2
    mypy==1.8
commands =
    python -m flake8 src tests
    python -m isort src tests --check
    python -m mypy src

[testenv:pre-commit]
skip_install = true
deps =
    pre-commit==3.6.0
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:test]
skip_install = true
deps =
    pytest==8.0.0
    pytest-cov==4.1.0
commands =
    python -m pytest

[pytest-config]
posargs =
    --cov-report xml:cover/coverage-BUILD_{env:BUILD_NUMBER:0}.xml
    --junitxml=cover/xunit-result-BUILD_{env:BUILD_NUMBER:0}.xml

[coverage:run]
branch = true
parallel = true

[coverage:report]
skip_covered = True
show_missing = True
exclude_lines =
    \#\s*pragma: no cover
    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
    ^\s*raise$
    ^if __name__ == ['"]__main__['"]:$

[coverage:paths]
source =
    src/tox
    src\tox
    */.tox/*/lib/python*/site-packages/tox
    *\.tox\*\lib\python*\site-packages\tox
    */.tox/pypy*/site-packages/tox
    *\.tox\pypy*\site-packages\tox
    */.tox/*/Lib/site-packages/tox
    *\.tox\*\Lib\site-packages\tox
    */src/tox
    *\src\tox
    */.tox/build
    *\.tox\build
    */.tox/dist
    *\.tox\dist
    */.mypy_cache
    *\.mypy_cache

[flake8]
max-complexity = 22
max-line-length = 99
ignore = E203, W503, C901, E402, B011
